"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/prompts";
exports.ids = ["pages/api/prompts"];
exports.modules = {

/***/ "(api-node)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAuthSession: () => (/* binding */ getAuthSession),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withAuthForMethods: () => (/* binding */ withAuthForMethods)\n/* harmony export */ });\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/jwt */ \"next-auth/jwt\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Check if the request is authenticated\n * @param {Object} req - The request object\n * @returns {Promise<Object|null>} - The user session or null if not authenticated\n */ async function getAuthSession(req) {\n    return await (0,next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__.getToken)({\n        req,\n        secret: process.env.NEXTAUTH_SECRET\n    });\n}\n/**\n * Higher-order function that creates an API handler that requires authentication\n * @param {Function} handler - The API handler to protect\n * @returns {Function} - The protected API handler\n */ function withAuth(handler) {\n    return async (req, res)=>{\n        const session = await getAuthSession(req);\n        if (!session) {\n            return res.status(401).json({\n                error: \"Unauthorized\"\n            });\n        }\n        // Add the session to the request object\n        req.session = session;\n        // Call the original handler\n        return handler(req, res);\n    };\n}\n/**\n * Higher-order function that optionally requires authentication for certain methods\n * @param {Function} handler - The API handler \n * @param {Array} protectedMethods - HTTP methods that require authentication (e.g., ['POST', 'PUT', 'DELETE'])\n * @returns {Function} - The conditionally protected API handler\n */ function withAuthForMethods(handler, protectedMethods = [\n    'POST',\n    'PUT',\n    'DELETE'\n]) {\n    return async (req, res)=>{\n        // Check if the current method requires authentication\n        if (protectedMethods.includes(req.method)) {\n            const session = await getAuthSession(req);\n            if (!session) {\n                return res.status(401).json({\n                    error: \"Unauthorized\"\n                });\n            }\n            // Add the session to the request object\n            req.session = session;\n        }\n        // Call the original handler\n        return handler(req, res);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9hdXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlDO0FBRXpDOzs7O0NBSUMsR0FDTSxlQUFlQyxlQUFlQyxHQUFHO0lBQ3RDLE9BQU8sTUFBTUYsdURBQVFBLENBQUM7UUFBRUU7UUFBS0MsUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxlQUFlO0lBQUM7QUFDbkU7QUFFQTs7OztDQUlDLEdBQ00sU0FBU0MsU0FBU0MsT0FBTztJQUM5QixPQUFPLE9BQU9OLEtBQUtPO1FBQ2pCLE1BQU1DLFVBQVUsTUFBTVQsZUFBZUM7UUFFckMsSUFBSSxDQUFDUSxTQUFTO1lBQ1osT0FBT0QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUFlO1FBQ3REO1FBRUEsd0NBQXdDO1FBQ3hDWCxJQUFJUSxPQUFPLEdBQUdBO1FBRWQsNEJBQTRCO1FBQzVCLE9BQU9GLFFBQVFOLEtBQUtPO0lBQ3RCO0FBQ0Y7QUFFQTs7Ozs7Q0FLQyxHQUNNLFNBQVNLLG1CQUFtQk4sT0FBTyxFQUFFTyxtQkFBbUI7SUFBQztJQUFRO0lBQU87Q0FBUztJQUN0RixPQUFPLE9BQU9iLEtBQUtPO1FBQ2pCLHNEQUFzRDtRQUN0RCxJQUFJTSxpQkFBaUJDLFFBQVEsQ0FBQ2QsSUFBSWUsTUFBTSxHQUFHO1lBQ3pDLE1BQU1QLFVBQVUsTUFBTVQsZUFBZUM7WUFFckMsSUFBSSxDQUFDUSxTQUFTO2dCQUNaLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7b0JBQUVDLE9BQU87Z0JBQWU7WUFDdEQ7WUFFQSx3Q0FBd0M7WUFDeENYLElBQUlRLE9BQU8sR0FBR0E7UUFDaEI7UUFFQSw0QkFBNEI7UUFDNUIsT0FBT0YsUUFBUU4sS0FBS087SUFDdEI7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9saWIvYXV0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gXCJuZXh0LWF1dGgvand0XCI7XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIHJlcXVlc3QgaXMgYXV0aGVudGljYXRlZFxuICogQHBhcmFtIHtPYmplY3R9IHJlcSAtIFRoZSByZXF1ZXN0IG9iamVjdFxuICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0fG51bGw+fSAtIFRoZSB1c2VyIHNlc3Npb24gb3IgbnVsbCBpZiBub3QgYXV0aGVudGljYXRlZFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QXV0aFNlc3Npb24ocmVxKSB7XG4gIHJldHVybiBhd2FpdCBnZXRUb2tlbih7IHJlcSwgc2VjcmV0OiBwcm9jZXNzLmVudi5ORVhUQVVUSF9TRUNSRVQgfSk7XG59XG5cbi8qKlxuICogSGlnaGVyLW9yZGVyIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhbiBBUEkgaGFuZGxlciB0aGF0IHJlcXVpcmVzIGF1dGhlbnRpY2F0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIC0gVGhlIEFQSSBoYW5kbGVyIHRvIHByb3RlY3RcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gLSBUaGUgcHJvdGVjdGVkIEFQSSBoYW5kbGVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3aXRoQXV0aChoYW5kbGVyKSB7XG4gIHJldHVybiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0QXV0aFNlc3Npb24ocmVxKTtcbiAgICBcbiAgICBpZiAoIXNlc3Npb24pIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiBcIlVuYXV0aG9yaXplZFwiIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBBZGQgdGhlIHNlc3Npb24gdG8gdGhlIHJlcXVlc3Qgb2JqZWN0XG4gICAgcmVxLnNlc3Npb24gPSBzZXNzaW9uO1xuICAgIFxuICAgIC8vIENhbGwgdGhlIG9yaWdpbmFsIGhhbmRsZXJcbiAgICByZXR1cm4gaGFuZGxlcihyZXEsIHJlcyk7XG4gIH07XG59XG5cbi8qKlxuICogSGlnaGVyLW9yZGVyIGZ1bmN0aW9uIHRoYXQgb3B0aW9uYWxseSByZXF1aXJlcyBhdXRoZW50aWNhdGlvbiBmb3IgY2VydGFpbiBtZXRob2RzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIC0gVGhlIEFQSSBoYW5kbGVyIFxuICogQHBhcmFtIHtBcnJheX0gcHJvdGVjdGVkTWV0aG9kcyAtIEhUVFAgbWV0aG9kcyB0aGF0IHJlcXVpcmUgYXV0aGVudGljYXRpb24gKGUuZy4sIFsnUE9TVCcsICdQVVQnLCAnREVMRVRFJ10pXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IC0gVGhlIGNvbmRpdGlvbmFsbHkgcHJvdGVjdGVkIEFQSSBoYW5kbGVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3aXRoQXV0aEZvck1ldGhvZHMoaGFuZGxlciwgcHJvdGVjdGVkTWV0aG9kcyA9IFsnUE9TVCcsICdQVVQnLCAnREVMRVRFJ10pIHtcbiAgcmV0dXJuIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIC8vIENoZWNrIGlmIHRoZSBjdXJyZW50IG1ldGhvZCByZXF1aXJlcyBhdXRoZW50aWNhdGlvblxuICAgIGlmIChwcm90ZWN0ZWRNZXRob2RzLmluY2x1ZGVzKHJlcS5tZXRob2QpKSB7XG4gICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0QXV0aFNlc3Npb24ocmVxKTtcbiAgICAgIFxuICAgICAgaWYgKCFzZXNzaW9uKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiBcIlVuYXV0aG9yaXplZFwiIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBBZGQgdGhlIHNlc3Npb24gdG8gdGhlIHJlcXVlc3Qgb2JqZWN0XG4gICAgICByZXEuc2Vzc2lvbiA9IHNlc3Npb247XG4gICAgfVxuICAgIFxuICAgIC8vIENhbGwgdGhlIG9yaWdpbmFsIGhhbmRsZXJcbiAgICByZXR1cm4gaGFuZGxlcihyZXEsIHJlcyk7XG4gIH07XG59Il0sIm5hbWVzIjpbImdldFRva2VuIiwiZ2V0QXV0aFNlc3Npb24iLCJyZXEiLCJzZWNyZXQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVEFVVEhfU0VDUkVUIiwid2l0aEF1dGgiLCJoYW5kbGVyIiwicmVzIiwic2Vzc2lvbiIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIndpdGhBdXRoRm9yTWV0aG9kcyIsInByb3RlY3RlZE1ldGhvZHMiLCJpbmNsdWRlcyIsIm1ldGhvZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./lib/auth.js\n");

/***/ }),

/***/ "(api-node)/./lib/db.js":
/*!*******************!*\
  !*** ./lib/db.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPromptToCollection: () => (/* binding */ addPromptToCollection),\n/* harmony export */   createCollection: () => (/* binding */ createCollection),\n/* harmony export */   createPrompt: () => (/* binding */ createPrompt),\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   deleteCollection: () => (/* binding */ deleteCollection),\n/* harmony export */   deletePrompt: () => (/* binding */ deletePrompt),\n/* harmony export */   deleteUser: () => (/* binding */ deleteUser),\n/* harmony export */   getAllCollections: () => (/* binding */ getAllCollections),\n/* harmony export */   getAllPrompts: () => (/* binding */ getAllPrompts),\n/* harmony export */   getAllUsers: () => (/* binding */ getAllUsers),\n/* harmony export */   getCollectionById: () => (/* binding */ getCollectionById),\n/* harmony export */   getPromptById: () => (/* binding */ getPromptById),\n/* harmony export */   getUserByEmail: () => (/* binding */ getUserByEmail),\n/* harmony export */   getUserById: () => (/* binding */ getUserById),\n/* harmony export */   initializeDb: () => (/* binding */ initializeDb),\n/* harmony export */   removePromptFromCollection: () => (/* binding */ removePromptFromCollection),\n/* harmony export */   searchPrompts: () => (/* binding */ searchPrompts),\n/* harmony export */   updateCollection: () => (/* binding */ updateCollection),\n/* harmony export */   updatePrompt: () => (/* binding */ updatePrompt),\n/* harmony export */   updateUser: () => (/* binding */ updateUser)\n/* harmony export */ });\n// In-memory database for development\nlet prompts = [];\nlet collections = [];\nlet users = [];\nlet promptIdCounter = 1;\nlet collectionIdCounter = 1;\nlet userIdCounter = 1;\n// Prompts\nconst getAllPrompts = ()=>{\n    return [\n        ...prompts\n    ];\n};\nconst getPromptById = (id)=>{\n    return prompts.find((prompt)=>prompt.id === parseInt(id)) || null;\n};\nconst createPrompt = (promptData)=>{\n    const newPrompt = {\n        id: promptIdCounter++,\n        description: '',\n        aiPlatform: 'ChatGPT',\n        rating: 0,\n        usageCount: 0,\n        successRate: 0,\n        visibility: 'private',\n        teamId: null,\n        ...promptData,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n    prompts.push(newPrompt);\n    return newPrompt;\n};\nconst updatePrompt = (id, promptData)=>{\n    const index = prompts.findIndex((prompt)=>prompt.id === parseInt(id));\n    if (index === -1) return null;\n    const updatedPrompt = {\n        ...prompts[index],\n        ...promptData,\n        updatedAt: new Date().toISOString()\n    };\n    prompts[index] = updatedPrompt;\n    return updatedPrompt;\n};\nconst deletePrompt = (id)=>{\n    const index = prompts.findIndex((prompt)=>prompt.id === parseInt(id));\n    if (index === -1) return false;\n    prompts.splice(index, 1);\n    return true;\n};\nconst searchPrompts = (query, options = {})=>{\n    const searchLower = query.toLowerCase();\n    // Filter by user ID if specified\n    let filteredPrompts = options.userId ? prompts.filter((prompt)=>prompt.userId === options.userId) : prompts;\n    // Filter by team ID if specified\n    if (options.teamId) {\n        filteredPrompts = filteredPrompts.filter((prompt)=>prompt.teamId === options.teamId || prompt.visibility === 'team' && prompt.teamId === options.teamId);\n    }\n    // Filter by visibility\n    if (options.visibility) {\n        filteredPrompts = filteredPrompts.filter((prompt)=>prompt.visibility === options.visibility);\n    }\n    // Filter by AI platform\n    if (options.aiPlatform) {\n        filteredPrompts = filteredPrompts.filter((prompt)=>prompt.aiPlatform === options.aiPlatform);\n    }\n    // Filter by minimum rating\n    if (options.minRating) {\n        const minRatingValue = parseFloat(options.minRating);\n        filteredPrompts = filteredPrompts.filter((prompt)=>prompt.rating && prompt.rating >= minRatingValue);\n    }\n    // Filter by tags if specified\n    if (options.tags && options.tags.length > 0) {\n        const tags = Array.isArray(options.tags) ? options.tags : [\n            options.tags\n        ];\n        if (options.tagMatchType === 'any') {\n            // Match any of the specified tags\n            filteredPrompts = filteredPrompts.filter((prompt)=>prompt.tags && prompt.tags.some((tag)=>tags.includes(tag)));\n        } else {\n            // Match all of the specified tags (default)\n            filteredPrompts = filteredPrompts.filter((prompt)=>prompt.tags && tags.every((tag)=>prompt.tags.includes(tag)));\n        }\n    }\n    // Filter by minimum usage count\n    if (options.minUsageCount) {\n        const minUsage = parseInt(options.minUsageCount, 10);\n        filteredPrompts = filteredPrompts.filter((prompt)=>prompt.usageCount && prompt.usageCount >= minUsage);\n    }\n    // Filter by minimum success rate\n    if (options.minSuccessRate) {\n        const minSuccess = parseFloat(options.minSuccessRate);\n        filteredPrompts = filteredPrompts.filter((prompt)=>prompt.successRate && prompt.successRate >= minSuccess);\n    }\n    // Apply text search if a query is provided\n    if (query && query.trim() !== '') {\n        filteredPrompts = filteredPrompts.filter((prompt)=>prompt.title.toLowerCase().includes(searchLower) || prompt.content.toLowerCase().includes(searchLower) || prompt.description && prompt.description.toLowerCase().includes(searchLower) || prompt.tags && prompt.tags.some((tag)=>tag.toLowerCase().includes(searchLower)));\n    }\n    // Sort results if specified\n    if (options.sortBy) {\n        const direction = options.sortDirection === 'desc' ? -1 : 1;\n        filteredPrompts.sort((a, b)=>{\n            switch(options.sortBy){\n                case 'rating':\n                    return ((b.rating || 0) - (a.rating || 0)) * direction;\n                case 'usageCount':\n                    return ((b.usageCount || 0) - (a.usageCount || 0)) * direction;\n                case 'successRate':\n                    return ((b.successRate || 0) - (a.successRate || 0)) * direction;\n                case 'createdAt':\n                    return (new Date(b.createdAt) - new Date(a.createdAt)) * direction;\n                case 'updatedAt':\n                    return (new Date(b.updatedAt) - new Date(a.updatedAt)) * direction;\n                default:\n                    return 0;\n            }\n        });\n    } else {\n        // Default sort by creation date (newest first)\n        filteredPrompts.sort((a, b)=>new Date(b.createdAt) - new Date(a.createdAt));\n    }\n    return filteredPrompts;\n};\n// Collections\nconst getAllCollections = ()=>{\n    return [\n        ...collections\n    ];\n};\nconst getCollectionById = (id)=>{\n    return collections.find((collection)=>collection.id === parseInt(id)) || null;\n};\nconst createCollection = (collectionData)=>{\n    const newCollection = {\n        id: collectionIdCounter++,\n        ...collectionData,\n        prompts: [],\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n    collections.push(newCollection);\n    return newCollection;\n};\nconst updateCollection = (id, collectionData)=>{\n    const index = collections.findIndex((collection)=>collection.id === parseInt(id));\n    if (index === -1) return null;\n    const updatedCollection = {\n        ...collections[index],\n        ...collectionData,\n        updatedAt: new Date().toISOString()\n    };\n    collections[index] = updatedCollection;\n    return updatedCollection;\n};\nconst deleteCollection = (id)=>{\n    const index = collections.findIndex((collection)=>collection.id === parseInt(id));\n    if (index === -1) return false;\n    collections.splice(index, 1);\n    return true;\n};\nconst addPromptToCollection = (collectionId, promptId)=>{\n    const collection = getCollectionById(collectionId);\n    if (!collection) return null;\n    // Check if prompt exists\n    const prompt = getPromptById(promptId);\n    if (!prompt) return null;\n    // Check if prompt is already in collection\n    if (collection.prompts.includes(parseInt(promptId))) {\n        return collection;\n    }\n    collection.prompts.push(parseInt(promptId));\n    collection.updatedAt = new Date().toISOString();\n    return collection;\n};\nconst removePromptFromCollection = (collectionId, promptId)=>{\n    const collection = getCollectionById(collectionId);\n    if (!collection) return null;\n    const promptIndex = collection.prompts.indexOf(parseInt(promptId));\n    if (promptIndex === -1) return collection;\n    collection.prompts.splice(promptIndex, 1);\n    collection.updatedAt = new Date().toISOString();\n    return collection;\n};\n// User management functions\nconst getAllUsers = ()=>{\n    return [\n        ...users\n    ];\n};\nconst getUserById = (id)=>{\n    return users.find((user)=>user.id === parseInt(id)) || null;\n};\nconst getUserByEmail = (email)=>{\n    return users.find((user)=>user.email === email) || null;\n};\nconst createUser = (userData)=>{\n    // Check if user with this email already exists\n    const existingUser = getUserByEmail(userData.email);\n    if (existingUser) {\n        return null;\n    }\n    const newUser = {\n        id: userIdCounter++,\n        ...userData,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n    users.push(newUser);\n    return newUser;\n};\nconst updateUser = (id, userData)=>{\n    const index = users.findIndex((user)=>user.id === parseInt(id));\n    if (index === -1) return null;\n    // If trying to update email, check it's not already taken\n    if (userData.email && userData.email !== users[index].email) {\n        const existingUser = getUserByEmail(userData.email);\n        if (existingUser) {\n            return null;\n        }\n    }\n    const updatedUser = {\n        ...users[index],\n        ...userData,\n        updatedAt: new Date().toISOString()\n    };\n    users[index] = updatedUser;\n    return updatedUser;\n};\nconst deleteUser = (id)=>{\n    const index = users.findIndex((user)=>user.id === parseInt(id));\n    if (index === -1) return false;\n    users.splice(index, 1);\n    return true;\n};\n// Initialize with some sample data - in real app, this would be loaded from database\nconst initializeDb = async ()=>{\n    // Import hashPassword here to avoid circular dependency\n    const { hashPassword } = await __webpack_require__.e(/*! import() */ \"_api-node_lib_auth-utils_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./auth-utils */ \"(api-node)/./lib/auth-utils.js\"));\n    // Initialize sample user if none exist\n    if (users.length === 0) {\n        // Create a demo user with hashed password\n        createUser({\n            name: \"Demo User\",\n            email: \"demo@promptpro.com\",\n            password: await hashPassword(\"password123\"),\n            image: null\n        });\n    }\n    if (prompts.length === 0) {\n        // Use the demo user's ID as the creator\n        const demoUserId = 1;\n        createPrompt({\n            title: \"Creative Story Prompt\",\n            content: \"Write a short story about a world where gravity works in reverse, with trees growing downward and clouds forming on the ground.\",\n            description: \"Generates creative and imaginative short stories with unconventional physics or natural laws.\",\n            tags: [\n                \"creative\",\n                \"writing\",\n                \"fiction\"\n            ],\n            aiPlatform: \"ChatGPT\",\n            rating: 4.5,\n            usageCount: 127,\n            successRate: 92,\n            visibility: \"public\",\n            userId: demoUserId,\n            createdBy: \"Demo User\"\n        });\n        createPrompt({\n            title: \"Code Review Prompt\",\n            content: \"Review the following code for best practices, potential bugs, and performance issues: [CODE]\",\n            description: \"Provides detailed code reviews with suggestions for improvements and identification of potential issues.\",\n            tags: [\n                \"programming\",\n                \"code review\",\n                \"technical\"\n            ],\n            aiPlatform: \"Claude\",\n            rating: 4.8,\n            usageCount: 85,\n            successRate: 95,\n            visibility: \"public\",\n            userId: demoUserId,\n            createdBy: \"Demo User\"\n        });\n        createPrompt({\n            title: \"Essay Structure\",\n            content: \"Write a 5-paragraph essay on [TOPIC] with an introduction, three body paragraphs, and a conclusion.\",\n            description: \"Helps create well-structured academic essays with proper formatting and logical flow.\",\n            tags: [\n                \"academic\",\n                \"writing\",\n                \"education\"\n            ],\n            aiPlatform: \"ChatGPT\",\n            rating: 4.2,\n            usageCount: 210,\n            successRate: 89,\n            visibility: \"public\",\n            userId: demoUserId,\n            createdBy: \"Demo User\"\n        });\n        createPrompt({\n            title: \"Image Generation Concept\",\n            content: \"Create a detailed image of [SUBJECT] in the style of [ARTIST/STYLE], with [ADDITIONAL DETAILS].\",\n            description: \"Generates detailed prompts for AI image generation with specific artistic styles.\",\n            tags: [\n                \"image\",\n                \"art\",\n                \"design\",\n                \"creative\"\n            ],\n            aiPlatform: \"DALL-E\",\n            rating: 4.7,\n            usageCount: 156,\n            successRate: 93,\n            visibility: \"private\",\n            userId: demoUserId,\n            createdBy: \"Demo User\"\n        });\n        createPrompt({\n            title: \"Product Description Generator\",\n            content: \"Write a compelling product description for [PRODUCT] that highlights its [KEY FEATURES] and appeals to [TARGET AUDIENCE].\",\n            description: \"Creates professional marketing copy for product listings and e-commerce sites.\",\n            tags: [\n                \"marketing\",\n                \"business\",\n                \"copywriting\"\n            ],\n            aiPlatform: \"ChatGPT\",\n            rating: 4.3,\n            usageCount: 189,\n            successRate: 90,\n            visibility: \"public\",\n            userId: demoUserId,\n            createdBy: \"Demo User\"\n        });\n    }\n    if (collections.length === 0) {\n        // Use the demo user's ID as the creator\n        const demoUserId = 1;\n        createCollection({\n            name: \"Writing Prompts\",\n            description: \"Prompts for creative and academic writing\",\n            userId: demoUserId\n        });\n        createCollection({\n            name: \"Technical Prompts\",\n            description: \"Prompts for coding, technical documentation, and problem-solving\",\n            userId: demoUserId\n        });\n        createCollection({\n            name: \"Marketing Copy\",\n            description: \"Prompts for creating effective marketing and advertising content\",\n            userId: demoUserId\n        });\n        createCollection({\n            name: \"Visual Design\",\n            description: \"Prompts for generating images and visual design concepts\",\n            userId: demoUserId\n        });\n        // Add prompts to collections\n        addPromptToCollection(1, 1); // Creative Story to Writing Prompts\n        addPromptToCollection(1, 3); // Essay Structure to Writing Prompts\n        addPromptToCollection(2, 2); // Code Review to Technical Prompts\n        addPromptToCollection(3, 5); // Product Description to Marketing Copy\n        addPromptToCollection(4, 4); // Image Generation to Visual Design\n    }\n};\n// Call initialize when imported\n(async ()=>{\n    try {\n        await initializeDb();\n        console.log('Database initialized with sample data');\n    } catch (error) {\n        console.error('Database initialization error:', error);\n    }\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/db.js\n");

/***/ }),

/***/ "(api-node)/./models/prompt.js":
/*!**************************!*\
  !*** ./models/prompt.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   promptModel: () => (/* binding */ promptModel),\n/* harmony export */   validatePrompt: () => (/* binding */ validatePrompt)\n/* harmony export */ });\n// Prompt model structure\nconst promptModel = {\n    id: Number,\n    title: String,\n    content: String,\n    description: String,\n    tags: Array,\n    aiPlatform: String,\n    rating: Number,\n    usageCount: Number,\n    successRate: Number,\n    visibility: String,\n    userId: Number,\n    createdBy: String,\n    teamId: Number,\n    createdAt: String,\n    updatedAt: String\n};\n// Validate prompt data\nconst validatePrompt = (data)=>{\n    const errors = {};\n    // Required fields\n    if (!data.title) {\n        errors.title = 'Title is required';\n    } else if (data.title.length < 3) {\n        errors.title = 'Title must be at least 3 characters';\n    } else if (data.title.length > 100) {\n        errors.title = 'Title must be less than 100 characters';\n    }\n    if (!data.content) {\n        errors.content = 'Content is required';\n    } else if (data.content.length < 10) {\n        errors.content = 'Content must be at least 10 characters';\n    }\n    // Optional description\n    if (data.description && data.description.length > 500) {\n        errors.description = 'Description must be less than 500 characters';\n    }\n    // Tags validation\n    if (data.tags) {\n        if (!Array.isArray(data.tags)) {\n            errors.tags = 'Tags must be an array';\n        } else {\n            for(let i = 0; i < data.tags.length; i++){\n                const tag = data.tags[i];\n                if (typeof tag !== 'string') {\n                    errors.tags = 'All tags must be strings';\n                    break;\n                }\n                if (tag.length < 1) {\n                    errors.tags = 'Tags cannot be empty';\n                    break;\n                }\n                if (tag.length > 20) {\n                    errors.tags = 'Tags must be less than 20 characters';\n                    break;\n                }\n            }\n        }\n    }\n    // AI Platform validation\n    if (data.aiPlatform && typeof data.aiPlatform !== 'string') {\n        errors.aiPlatform = 'AI Platform must be a string';\n    }\n    // Rating validation (1-5)\n    if (data.rating !== undefined) {\n        if (typeof data.rating !== 'number') {\n            errors.rating = 'Rating must be a number';\n        } else if (data.rating < 1 || data.rating > 5) {\n            errors.rating = 'Rating must be between 1 and 5';\n        }\n    }\n    // Usage count validation\n    if (data.usageCount !== undefined && (typeof data.usageCount !== 'number' || data.usageCount < 0)) {\n        errors.usageCount = 'Usage count must be a non-negative number';\n    }\n    // Success rate validation (0-100)\n    if (data.successRate !== undefined) {\n        if (typeof data.successRate !== 'number') {\n            errors.successRate = 'Success rate must be a number';\n        } else if (data.successRate < 0 || data.successRate > 100) {\n            errors.successRate = 'Success rate must be between 0 and 100';\n        }\n    }\n    // Visibility validation\n    if (data.visibility) {\n        const validVisibilities = [\n            'public',\n            'private',\n            'team'\n        ];\n        if (!validVisibilities.includes(data.visibility)) {\n            errors.visibility = 'Visibility must be one of: public, private, team';\n        }\n        // If visibility is 'team', teamId must be provided\n        if (data.visibility === 'team' && !data.teamId) {\n            errors.teamId = 'Team ID is required when visibility is set to team';\n        }\n    }\n    return {\n        isValid: Object.keys(errors).length === 0,\n        errors\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./models/prompt.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprompts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprompts%2Findex.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprompts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprompts%2Findex.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_prompts_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/prompts/index.js */ \"(api-node)/./pages/api/prompts/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_prompts_index_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_prompts_index_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/prompts\",\n        pathname: \"/api/prompts\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_prompts_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGcHJvbXB0cyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGcHJvbXB0cyUyRmluZGV4LmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQ3lEO0FBQ3pEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx3REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsd0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvcHJvbXB0cy9pbmRleC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvbXB0c1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb21wdHNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprompts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprompts%2Findex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/prompts/index.js":
/*!************************************!*\
  !*** ./pages/api/prompts/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/db */ \"(api-node)/./lib/db.js\");\n/* harmony import */ var _models_prompt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../models/prompt */ \"(api-node)/./models/prompt.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/auth */ \"(api-node)/./lib/auth.js\");\n\n\n\nasync function handler(req, res) {\n    switch(req.method){\n        case 'GET':\n            return getPrompts(req, res);\n        case 'POST':\n            return addPrompt(req, res);\n        default:\n            return res.status(405).json({\n                message: 'Method not allowed'\n            });\n    }\n}\n// Protect POST, PUT, DELETE methods\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.withAuthForMethods)(handler));\nfunction getPrompts(req, res) {\n    try {\n        const prompts = (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.getAllPrompts)();\n        return res.status(200).json(prompts);\n    } catch (error) {\n        console.error('Error getting prompts:', error);\n        return res.status(500).json({\n            message: 'Internal server error'\n        });\n    }\n}\nfunction addPrompt(req, res) {\n    try {\n        const { title, content, tags } = req.body;\n        // Validate the prompt data\n        const validation = (0,_models_prompt__WEBPACK_IMPORTED_MODULE_1__.validatePrompt)({\n            title,\n            content,\n            tags\n        });\n        if (!validation.isValid) {\n            return res.status(400).json({\n                errors: validation.errors\n            });\n        }\n        // Add user information from the session (NextAuth)\n        const userId = req.session?.user?.id;\n        const userName = req.session?.user?.name || 'Anonymous';\n        // Create the prompt with user information\n        const newPrompt = (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.createPrompt)({\n            title,\n            content,\n            tags,\n            userId,\n            createdBy: userName\n        });\n        return res.status(201).json(newPrompt);\n    } catch (error) {\n        console.error('Error adding prompt:', error);\n        return res.status(500).json({\n            message: 'Internal server error'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9wcm9tcHRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEQ7QUFDTjtBQUNEO0FBRXZELGVBQWVJLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM3QixPQUFRRCxJQUFJRSxNQUFNO1FBQ2hCLEtBQUs7WUFDSCxPQUFPQyxXQUFXSCxLQUFLQztRQUN6QixLQUFLO1lBQ0gsT0FBT0csVUFBVUosS0FBS0M7UUFDeEI7WUFDRSxPQUFPQSxJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO1lBQXFCO0lBQ2hFO0FBQ0Y7QUFFQSxvQ0FBb0M7QUFDcEMsaUVBQWVULDZEQUFrQkEsQ0FBQ0MsUUFBUUEsRUFBQztBQUUzQyxTQUFTSSxXQUFXSCxHQUFHLEVBQUVDLEdBQUc7SUFDMUIsSUFBSTtRQUNGLE1BQU1PLFVBQVViLHNEQUFhQTtRQUM3QixPQUFPTSxJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDRTtJQUM5QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDBCQUEwQkE7UUFDeEMsT0FBT1IsSUFBSUksTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxTQUFTO1FBQXdCO0lBQ2pFO0FBQ0Y7QUFFQSxTQUFTSCxVQUFVSixHQUFHLEVBQUVDLEdBQUc7SUFDekIsSUFBSTtRQUNGLE1BQU0sRUFBRVUsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLElBQUksRUFBRSxHQUFHYixJQUFJYyxJQUFJO1FBRXpDLDJCQUEyQjtRQUMzQixNQUFNQyxhQUFhbEIsOERBQWNBLENBQUM7WUFBRWM7WUFBT0M7WUFBU0M7UUFBSztRQUV6RCxJQUFJLENBQUNFLFdBQVdDLE9BQU8sRUFBRTtZQUN2QixPQUFPZixJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFVyxRQUFRRixXQUFXRSxNQUFNO1lBQUM7UUFDMUQ7UUFFQSxtREFBbUQ7UUFDbkQsTUFBTUMsU0FBU2xCLElBQUltQixPQUFPLEVBQUVDLE1BQU1DO1FBQ2xDLE1BQU1DLFdBQVd0QixJQUFJbUIsT0FBTyxFQUFFQyxNQUFNRyxRQUFRO1FBRTVDLDBDQUEwQztRQUMxQyxNQUFNQyxZQUFZNUIscURBQVlBLENBQUM7WUFDN0JlO1lBQ0FDO1lBQ0FDO1lBQ0FLO1lBQ0FPLFdBQVdIO1FBQ2I7UUFFQSxPQUFPckIsSUFBSUksTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ2tCO0lBQzlCLEVBQUUsT0FBT2YsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsd0JBQXdCQTtRQUN0QyxPQUFPUixJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBd0I7SUFDakU7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9wYWdlcy9hcGkvcHJvbXB0cy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRBbGxQcm9tcHRzLCBjcmVhdGVQcm9tcHQgfSBmcm9tICcuLi8uLi8uLi9saWIvZGInO1xuaW1wb3J0IHsgdmFsaWRhdGVQcm9tcHQgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvcHJvbXB0JztcbmltcG9ydCB7IHdpdGhBdXRoRm9yTWV0aG9kcyB9IGZyb20gJy4uLy4uLy4uL2xpYi9hdXRoJztcblxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBzd2l0Y2ggKHJlcS5tZXRob2QpIHtcbiAgICBjYXNlICdHRVQnOlxuICAgICAgcmV0dXJuIGdldFByb21wdHMocmVxLCByZXMpO1xuICAgIGNhc2UgJ1BPU1QnOlxuICAgICAgcmV0dXJuIGFkZFByb21wdChyZXEsIHJlcyk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IG1lc3NhZ2U6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xuICB9XG59XG5cbi8vIFByb3RlY3QgUE9TVCwgUFVULCBERUxFVEUgbWV0aG9kc1xuZXhwb3J0IGRlZmF1bHQgd2l0aEF1dGhGb3JNZXRob2RzKGhhbmRsZXIpO1xuXG5mdW5jdGlvbiBnZXRQcm9tcHRzKHJlcSwgcmVzKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcHJvbXB0cyA9IGdldEFsbFByb21wdHMoKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24ocHJvbXB0cyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyBwcm9tcHRzOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGRQcm9tcHQocmVxLCByZXMpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHRpdGxlLCBjb250ZW50LCB0YWdzIH0gPSByZXEuYm9keTtcbiAgICBcbiAgICAvLyBWYWxpZGF0ZSB0aGUgcHJvbXB0IGRhdGFcbiAgICBjb25zdCB2YWxpZGF0aW9uID0gdmFsaWRhdGVQcm9tcHQoeyB0aXRsZSwgY29udGVudCwgdGFncyB9KTtcbiAgICBcbiAgICBpZiAoIXZhbGlkYXRpb24uaXNWYWxpZCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3JzOiB2YWxpZGF0aW9uLmVycm9ycyB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gQWRkIHVzZXIgaW5mb3JtYXRpb24gZnJvbSB0aGUgc2Vzc2lvbiAoTmV4dEF1dGgpXG4gICAgY29uc3QgdXNlcklkID0gcmVxLnNlc3Npb24/LnVzZXI/LmlkO1xuICAgIGNvbnN0IHVzZXJOYW1lID0gcmVxLnNlc3Npb24/LnVzZXI/Lm5hbWUgfHwgJ0Fub255bW91cyc7XG4gICAgXG4gICAgLy8gQ3JlYXRlIHRoZSBwcm9tcHQgd2l0aCB1c2VyIGluZm9ybWF0aW9uXG4gICAgY29uc3QgbmV3UHJvbXB0ID0gY3JlYXRlUHJvbXB0KHsgXG4gICAgICB0aXRsZSwgXG4gICAgICBjb250ZW50LCBcbiAgICAgIHRhZ3MsXG4gICAgICB1c2VySWQsXG4gICAgICBjcmVhdGVkQnk6IHVzZXJOYW1lXG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5qc29uKG5ld1Byb21wdCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgYWRkaW5nIHByb21wdDonLCBlcnJvcik7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogJ0ludGVybmFsIHNlcnZlciBlcnJvcicgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJnZXRBbGxQcm9tcHRzIiwiY3JlYXRlUHJvbXB0IiwidmFsaWRhdGVQcm9tcHQiLCJ3aXRoQXV0aEZvck1ldGhvZHMiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwiZ2V0UHJvbXB0cyIsImFkZFByb21wdCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwicHJvbXB0cyIsImVycm9yIiwiY29uc29sZSIsInRpdGxlIiwiY29udGVudCIsInRhZ3MiLCJib2R5IiwidmFsaWRhdGlvbiIsImlzVmFsaWQiLCJlcnJvcnMiLCJ1c2VySWQiLCJzZXNzaW9uIiwidXNlciIsImlkIiwidXNlck5hbWUiLCJuYW1lIiwibmV3UHJvbXB0IiwiY3JlYXRlZEJ5Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/prompts/index.js\n");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = import("bcryptjs");;

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "next-auth/jwt":
/*!********************************!*\
  !*** external "next-auth/jwt" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("next-auth/jwt");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprompts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fprompts%2Findex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();