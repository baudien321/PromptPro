"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/prompts/[id]/comments";
exports.ids = ["pages/api/prompts/[id]/comments"];
exports.modules = {

/***/ "(api-node)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAuthSession: () => (/* binding */ getAuthSession),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withAuthForMethods: () => (/* binding */ withAuthForMethods)\n/* harmony export */ });\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/jwt */ \"next-auth/jwt\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\r\n * Check if the request is authenticated\r\n * @param {Object} req - The request object\r\n * @returns {Promise<Object|null>} - The user session or null if not authenticated\r\n */ async function getAuthSession(req) {\n    return await (0,next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__.getToken)({\n        req,\n        secret: process.env.NEXTAUTH_SECRET\n    });\n}\n/**\r\n * Higher-order function that creates an API handler that requires authentication\r\n * @param {Function} handler - The API handler to protect\r\n * @returns {Function} - The protected API handler\r\n */ function withAuth(handler) {\n    return async (req, res)=>{\n        const session = await getAuthSession(req);\n        if (!session) {\n            return res.status(401).json({\n                error: \"Unauthorized\"\n            });\n        }\n        // Add the session to the request object\n        req.session = session;\n        // Also add a user property for compatibility\n        req.user = {\n            id: session.sub || session.id,\n            name: session.name,\n            email: session.email\n        };\n        // Call the original handler\n        return handler(req, res);\n    };\n}\n/**\r\n * Higher-order function that optionally requires authentication for certain methods\r\n * @param {Function} handler - The API handler \r\n * @param {Array} protectedMethods - HTTP methods that require authentication (e.g., ['POST', 'PUT', 'DELETE'])\r\n * @returns {Function} - The conditionally protected API handler\r\n */ function withAuthForMethods(handler, protectedMethods = [\n    'POST',\n    'PUT',\n    'DELETE'\n]) {\n    return async (req, res)=>{\n        // Check if the current method requires authentication\n        if (protectedMethods.includes(req.method)) {\n            const session = await getAuthSession(req);\n            if (!session) {\n                return res.status(401).json({\n                    error: \"Unauthorized\"\n                });\n            }\n            // Add the session to the request object\n            req.session = session;\n            // Also add a user property for compatibility\n            req.user = {\n                id: session.sub || session.id,\n                name: session.name,\n                email: session.email\n            };\n        }\n        // Call the original handler\n        return handler(req, res);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9hdXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlDO0FBRXpDOzs7O0NBSUMsR0FDTSxlQUFlQyxlQUFlQyxHQUFHO0lBQ3RDLE9BQU8sTUFBTUYsdURBQVFBLENBQUM7UUFBRUU7UUFBS0MsUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxlQUFlO0lBQUM7QUFDbkU7QUFFQTs7OztDQUlDLEdBQ00sU0FBU0MsU0FBU0MsT0FBTztJQUM5QixPQUFPLE9BQU9OLEtBQUtPO1FBQ2pCLE1BQU1DLFVBQVUsTUFBTVQsZUFBZUM7UUFFckMsSUFBSSxDQUFDUSxTQUFTO1lBQ1osT0FBT0QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUFlO1FBQ3REO1FBRUEsd0NBQXdDO1FBQ3hDWCxJQUFJUSxPQUFPLEdBQUdBO1FBRWQsNkNBQTZDO1FBQzdDUixJQUFJWSxJQUFJLEdBQUc7WUFDVEMsSUFBSUwsUUFBUU0sR0FBRyxJQUFJTixRQUFRSyxFQUFFO1lBQzdCRSxNQUFNUCxRQUFRTyxJQUFJO1lBQ2xCQyxPQUFPUixRQUFRUSxLQUFLO1FBQ3RCO1FBRUEsNEJBQTRCO1FBQzVCLE9BQU9WLFFBQVFOLEtBQUtPO0lBQ3RCO0FBQ0Y7QUFFQTs7Ozs7Q0FLQyxHQUNNLFNBQVNVLG1CQUFtQlgsT0FBTyxFQUFFWSxtQkFBbUI7SUFBQztJQUFRO0lBQU87Q0FBUztJQUN0RixPQUFPLE9BQU9sQixLQUFLTztRQUNqQixzREFBc0Q7UUFDdEQsSUFBSVcsaUJBQWlCQyxRQUFRLENBQUNuQixJQUFJb0IsTUFBTSxHQUFHO1lBQ3pDLE1BQU1aLFVBQVUsTUFBTVQsZUFBZUM7WUFFckMsSUFBSSxDQUFDUSxTQUFTO2dCQUNaLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7b0JBQUVDLE9BQU87Z0JBQWU7WUFDdEQ7WUFFQSx3Q0FBd0M7WUFDeENYLElBQUlRLE9BQU8sR0FBR0E7WUFFZCw2Q0FBNkM7WUFDN0NSLElBQUlZLElBQUksR0FBRztnQkFDVEMsSUFBSUwsUUFBUU0sR0FBRyxJQUFJTixRQUFRSyxFQUFFO2dCQUM3QkUsTUFBTVAsUUFBUU8sSUFBSTtnQkFDbEJDLE9BQU9SLFFBQVFRLEtBQUs7WUFDdEI7UUFDRjtRQUVBLDRCQUE0QjtRQUM1QixPQUFPVixRQUFRTixLQUFLTztJQUN0QjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGJhdWRpXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvbXB0UHJvXFxQcm9tcHRQcm9cXGxpYlxcYXV0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gXCJuZXh0LWF1dGgvand0XCI7XHJcblxyXG4vKipcclxuICogQ2hlY2sgaWYgdGhlIHJlcXVlc3QgaXMgYXV0aGVudGljYXRlZFxyXG4gKiBAcGFyYW0ge09iamVjdH0gcmVxIC0gVGhlIHJlcXVlc3Qgb2JqZWN0XHJcbiAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdHxudWxsPn0gLSBUaGUgdXNlciBzZXNzaW9uIG9yIG51bGwgaWYgbm90IGF1dGhlbnRpY2F0ZWRcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBdXRoU2Vzc2lvbihyZXEpIHtcclxuICByZXR1cm4gYXdhaXQgZ2V0VG9rZW4oeyByZXEsIHNlY3JldDogcHJvY2Vzcy5lbnYuTkVYVEFVVEhfU0VDUkVUIH0pO1xyXG59XHJcblxyXG4vKipcclxuICogSGlnaGVyLW9yZGVyIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhbiBBUEkgaGFuZGxlciB0aGF0IHJlcXVpcmVzIGF1dGhlbnRpY2F0aW9uXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgLSBUaGUgQVBJIGhhbmRsZXIgdG8gcHJvdGVjdFxyXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IC0gVGhlIHByb3RlY3RlZCBBUEkgaGFuZGxlclxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhBdXRoKGhhbmRsZXIpIHtcclxuICByZXR1cm4gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0QXV0aFNlc3Npb24ocmVxKTtcclxuICAgIFxyXG4gICAgaWYgKCFzZXNzaW9uKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiBcIlVuYXV0aG9yaXplZFwiIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBBZGQgdGhlIHNlc3Npb24gdG8gdGhlIHJlcXVlc3Qgb2JqZWN0XHJcbiAgICByZXEuc2Vzc2lvbiA9IHNlc3Npb247XHJcbiAgICBcclxuICAgIC8vIEFsc28gYWRkIGEgdXNlciBwcm9wZXJ0eSBmb3IgY29tcGF0aWJpbGl0eVxyXG4gICAgcmVxLnVzZXIgPSB7XHJcbiAgICAgIGlkOiBzZXNzaW9uLnN1YiB8fCBzZXNzaW9uLmlkLFxyXG4gICAgICBuYW1lOiBzZXNzaW9uLm5hbWUsXHJcbiAgICAgIGVtYWlsOiBzZXNzaW9uLmVtYWlsXHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAvLyBDYWxsIHRoZSBvcmlnaW5hbCBoYW5kbGVyXHJcbiAgICByZXR1cm4gaGFuZGxlcihyZXEsIHJlcyk7XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEhpZ2hlci1vcmRlciBmdW5jdGlvbiB0aGF0IG9wdGlvbmFsbHkgcmVxdWlyZXMgYXV0aGVudGljYXRpb24gZm9yIGNlcnRhaW4gbWV0aG9kc1xyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIC0gVGhlIEFQSSBoYW5kbGVyIFxyXG4gKiBAcGFyYW0ge0FycmF5fSBwcm90ZWN0ZWRNZXRob2RzIC0gSFRUUCBtZXRob2RzIHRoYXQgcmVxdWlyZSBhdXRoZW50aWNhdGlvbiAoZS5nLiwgWydQT1NUJywgJ1BVVCcsICdERUxFVEUnXSlcclxuICogQHJldHVybnMge0Z1bmN0aW9ufSAtIFRoZSBjb25kaXRpb25hbGx5IHByb3RlY3RlZCBBUEkgaGFuZGxlclxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhBdXRoRm9yTWV0aG9kcyhoYW5kbGVyLCBwcm90ZWN0ZWRNZXRob2RzID0gWydQT1NUJywgJ1BVVCcsICdERUxFVEUnXSkge1xyXG4gIHJldHVybiBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIC8vIENoZWNrIGlmIHRoZSBjdXJyZW50IG1ldGhvZCByZXF1aXJlcyBhdXRoZW50aWNhdGlvblxyXG4gICAgaWYgKHByb3RlY3RlZE1ldGhvZHMuaW5jbHVkZXMocmVxLm1ldGhvZCkpIHtcclxuICAgICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldEF1dGhTZXNzaW9uKHJlcSk7XHJcbiAgICAgIFxyXG4gICAgICBpZiAoIXNlc3Npb24pIHtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogXCJVbmF1dGhvcml6ZWRcIiB9KTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLy8gQWRkIHRoZSBzZXNzaW9uIHRvIHRoZSByZXF1ZXN0IG9iamVjdFxyXG4gICAgICByZXEuc2Vzc2lvbiA9IHNlc3Npb247XHJcbiAgICAgIFxyXG4gICAgICAvLyBBbHNvIGFkZCBhIHVzZXIgcHJvcGVydHkgZm9yIGNvbXBhdGliaWxpdHlcclxuICAgICAgcmVxLnVzZXIgPSB7XHJcbiAgICAgICAgaWQ6IHNlc3Npb24uc3ViIHx8IHNlc3Npb24uaWQsXHJcbiAgICAgICAgbmFtZTogc2Vzc2lvbi5uYW1lLFxyXG4gICAgICAgIGVtYWlsOiBzZXNzaW9uLmVtYWlsXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIENhbGwgdGhlIG9yaWdpbmFsIGhhbmRsZXJcclxuICAgIHJldHVybiBoYW5kbGVyKHJlcSwgcmVzKTtcclxuICB9O1xyXG59Il0sIm5hbWVzIjpbImdldFRva2VuIiwiZ2V0QXV0aFNlc3Npb24iLCJyZXEiLCJzZWNyZXQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVEFVVEhfU0VDUkVUIiwid2l0aEF1dGgiLCJoYW5kbGVyIiwicmVzIiwic2Vzc2lvbiIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsInVzZXIiLCJpZCIsInN1YiIsIm5hbWUiLCJlbWFpbCIsIndpdGhBdXRoRm9yTWV0aG9kcyIsInByb3RlY3RlZE1ldGhvZHMiLCJpbmNsdWRlcyIsIm1ldGhvZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./lib/auth.js\n");

/***/ }),

/***/ "(api-node)/./lib/mongoose.js":
/*!*************************!*\
  !*** ./lib/mongoose.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n// Cache the connection promise to avoid reconnecting on every call\nlet connectionPromise = null;\nconst connectDB = async ()=>{\n    // If a connection promise exists, return it to reuse the connection\n    if (connectionPromise) {\n        // console.log(\"Using cached Mongoose connection\");\n        return connectionPromise;\n    }\n    // Check for MongoDB URI environment variable\n    if (!process.env.MONGODB_URI) {\n        throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n    }\n    // Create a new connection promise\n    console.log(\"Creating new Mongoose connection...\");\n    connectionPromise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(process.env.MONGODB_URI, {\n        dbName: process.env.MONGODB_DB || 'PromptPro',\n        // Recommended options (check Mongoose docs for latest)\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n    }).then((mongooseInstance)=>{\n        console.log(\"Mongoose connected successfully.\");\n        return mongooseInstance; // The resolved value of the promise\n    }).catch((err)=>{\n        console.error(\"Mongoose connection error:\", err);\n        connectionPromise = null; // Reset promise on error so retry is possible\n        throw err; // Re-throw error to be caught by the calling function\n    });\n    return connectionPromise;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9tb25nb29zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0M7QUFFaEMsbUVBQW1FO0FBQ25FLElBQUlDLG9CQUFvQjtBQUV4QixNQUFNQyxZQUFZO0lBQ2hCLG9FQUFvRTtJQUNwRSxJQUFJRCxtQkFBbUI7UUFDckIsbURBQW1EO1FBQ25ELE9BQU9BO0lBQ1Q7SUFFQSw2Q0FBNkM7SUFDN0MsSUFBSSxDQUFDRSxRQUFRQyxHQUFHLENBQUNDLFdBQVcsRUFBRTtRQUM1QixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFFQSxrQ0FBa0M7SUFDbENDLFFBQVFDLEdBQUcsQ0FBQztJQUNaUCxvQkFBb0JELHVEQUFnQixDQUFDRyxRQUFRQyxHQUFHLENBQUNDLFdBQVcsRUFBRTtRQUM1REssUUFBUVAsUUFBUUMsR0FBRyxDQUFDTyxVQUFVLElBQUk7UUFDbEMsdURBQXVEO1FBQ3ZEQyxpQkFBaUI7UUFDakJDLG9CQUFvQjtJQUN0QixHQUFHQyxJQUFJLENBQUMsQ0FBQ0M7UUFDUFIsUUFBUUMsR0FBRyxDQUFDO1FBQ1osT0FBT08sa0JBQWtCLG9DQUFvQztJQUMvRCxHQUFHQyxLQUFLLENBQUNDLENBQUFBO1FBQ1BWLFFBQVFXLEtBQUssQ0FBQyw4QkFBOEJEO1FBQzVDaEIsb0JBQW9CLE1BQU0sOENBQThDO1FBQ3hFLE1BQU1nQixLQUFLLHNEQUFzRDtJQUNuRTtJQUVBLE9BQU9oQjtBQUNUO0FBRUEsaUVBQWVDLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYmF1ZGlcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9tcHRQcm9cXFByb21wdFByb1xcbGliXFxtb25nb29zZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5cclxuLy8gQ2FjaGUgdGhlIGNvbm5lY3Rpb24gcHJvbWlzZSB0byBhdm9pZCByZWNvbm5lY3Rpbmcgb24gZXZlcnkgY2FsbFxyXG5sZXQgY29ubmVjdGlvblByb21pc2UgPSBudWxsO1xyXG5cclxuY29uc3QgY29ubmVjdERCID0gYXN5bmMgKCkgPT4ge1xyXG4gIC8vIElmIGEgY29ubmVjdGlvbiBwcm9taXNlIGV4aXN0cywgcmV0dXJuIGl0IHRvIHJldXNlIHRoZSBjb25uZWN0aW9uXHJcbiAgaWYgKGNvbm5lY3Rpb25Qcm9taXNlKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhcIlVzaW5nIGNhY2hlZCBNb25nb29zZSBjb25uZWN0aW9uXCIpO1xyXG4gICAgcmV0dXJuIGNvbm5lY3Rpb25Qcm9taXNlO1xyXG4gIH1cclxuXHJcbiAgLy8gQ2hlY2sgZm9yIE1vbmdvREIgVVJJIGVudmlyb25tZW50IHZhcmlhYmxlXHJcbiAgaWYgKCFwcm9jZXNzLmVudi5NT05HT0RCX1VSSSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgZGVmaW5lIHRoZSBNT05HT0RCX1VSSSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnNpZGUgLmVudi5sb2NhbCcpO1xyXG4gIH1cclxuXHJcbiAgLy8gQ3JlYXRlIGEgbmV3IGNvbm5lY3Rpb24gcHJvbWlzZVxyXG4gIGNvbnNvbGUubG9nKFwiQ3JlYXRpbmcgbmV3IE1vbmdvb3NlIGNvbm5lY3Rpb24uLi5cIik7XHJcbiAgY29ubmVjdGlvblByb21pc2UgPSBtb25nb29zZS5jb25uZWN0KHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJLCB7XHJcbiAgICBkYk5hbWU6IHByb2Nlc3MuZW52Lk1PTkdPREJfREIgfHwgJ1Byb21wdFBybycsIC8vIFVzZSBzcGVjaWZpYyBEQiBuYW1lIG9yIGRlZmF1bHRcclxuICAgIC8vIFJlY29tbWVuZGVkIG9wdGlvbnMgKGNoZWNrIE1vbmdvb3NlIGRvY3MgZm9yIGxhdGVzdClcclxuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcclxuICB9KS50aGVuKChtb25nb29zZUluc3RhbmNlKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhcIk1vbmdvb3NlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkuXCIpO1xyXG4gICAgcmV0dXJuIG1vbmdvb3NlSW5zdGFuY2U7IC8vIFRoZSByZXNvbHZlZCB2YWx1ZSBvZiB0aGUgcHJvbWlzZVxyXG4gIH0pLmNhdGNoKGVyciA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKFwiTW9uZ29vc2UgY29ubmVjdGlvbiBlcnJvcjpcIiwgZXJyKTtcclxuICAgIGNvbm5lY3Rpb25Qcm9taXNlID0gbnVsbDsgLy8gUmVzZXQgcHJvbWlzZSBvbiBlcnJvciBzbyByZXRyeSBpcyBwb3NzaWJsZVxyXG4gICAgdGhyb3cgZXJyOyAvLyBSZS10aHJvdyBlcnJvciB0byBiZSBjYXVnaHQgYnkgdGhlIGNhbGxpbmcgZnVuY3Rpb25cclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIGNvbm5lY3Rpb25Qcm9taXNlO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdERCOyAiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJjb25uZWN0aW9uUHJvbWlzZSIsImNvbm5lY3REQiIsInByb2Nlc3MiLCJlbnYiLCJNT05HT0RCX1VSSSIsIkVycm9yIiwiY29uc29sZSIsImxvZyIsImNvbm5lY3QiLCJkYk5hbWUiLCJNT05HT0RCX0RCIiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidGhlbiIsIm1vbmdvb3NlSW5zdGFuY2UiLCJjYXRjaCIsImVyciIsImVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./lib/mongoose.js\n");

/***/ }),

/***/ "(api-node)/./models/comment.js":
/*!***************************!*\
  !*** ./models/comment.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   sanitizeComment: () => (/* binding */ sanitizeComment),\n/* harmony export */   validateComment: () => (/* binding */ validateComment)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Comment data model and validation functions\n */ /**\n * Comment model schema\n * @typedef {Object} CommentModel\n * @property {string} id - Unique identifier\n * @property {string} promptId - ID of the prompt the comment is on\n * @property {string} userId - ID of the comment creator\n * @property {string} content - Comment text content\n * @property {string} createdBy - Name of the user who created the comment\n * @property {string} createdAt - Creation timestamp\n * @property {string} updatedAt - Last update timestamp\n */ /**\n * Comment model definition\n */ \nconst CommentSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    prompt: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'Prompt',\n        required: [\n            true,\n            'Prompt reference is required.'\n        ],\n        index: true // Index for efficient querying of comments by prompt\n    },\n    author: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        required: [\n            true,\n            'Author reference is required.'\n        ]\n    },\n    content: {\n        type: String,\n        required: [\n            true,\n            'Comment content cannot be empty.'\n        ],\n        trim: true,\n        maxlength: [\n            1000,\n            'Comment cannot exceed 1000 characters.'\n        ]\n    }\n}, {\n    timestamps: true // Automatically add createdAt and updatedAt\n});\n// --- Model Creation ---\nconst Comment = mongoose__WEBPACK_IMPORTED_MODULE_0__.models.Comment || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('Comment', CommentSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Comment);\n/**\n * Validate comment data\n * @param {Object} data - Comment data to validate\n * @returns {Object} Validation result with errors if any\n */ const validateComment = (data)=>{\n    const errors = {};\n    if (!data.content || data.content.trim() === '') {\n        errors.content = 'Comment content is required';\n    } else if (data.content.length > 1000) {\n        errors.content = 'Comment must be less than 1000 characters';\n    }\n    if (!data.promptId) {\n        errors.promptId = 'Prompt ID is required';\n    }\n    if (!data.userId) {\n        errors.userId = 'User ID is required';\n    }\n    return {\n        isValid: Object.keys(errors).length === 0,\n        errors\n    };\n};\n/**\n * Sanitize comment data for safe display\n * @param {Object} comment - Comment data to sanitize\n * @returns {Object} Sanitized comment data\n */ const sanitizeComment = (comment)=>{\n    return {\n        ...comment\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL21vZGVscy9jb21tZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FFRDs7Ozs7Ozs7OztDQVVDLEdBRUQ7O0NBRUMsR0FDbUQ7QUFFcEQsTUFBTUcsZ0JBQWdCLElBQUlGLDRDQUFNQSxDQUFDO0lBQzdCRyxRQUFRO1FBQ0pDLE1BQU1KLDRDQUFNQSxDQUFDSyxLQUFLLENBQUNDLFFBQVE7UUFDM0JDLEtBQUs7UUFDTEMsVUFBVTtZQUFDO1lBQU07U0FBZ0M7UUFDakRDLE9BQU8sS0FBSyxxREFBcUQ7SUFDckU7SUFDQUMsUUFBUTtRQUNKTixNQUFNSiw0Q0FBTUEsQ0FBQ0ssS0FBSyxDQUFDQyxRQUFRO1FBQzNCQyxLQUFLO1FBQ0xDLFVBQVU7WUFBQztZQUFNO1NBQWdDO0lBQ3JEO0lBQ0FHLFNBQVM7UUFDTFAsTUFBTVE7UUFDTkosVUFBVTtZQUFDO1lBQU07U0FBbUM7UUFDcERLLE1BQU07UUFDTkMsV0FBVztZQUFDO1lBQU07U0FBeUM7SUFDL0Q7QUFJSixHQUFHO0lBQ0NDLFlBQVksS0FBSyw0Q0FBNEM7QUFDakU7QUFFQSx5QkFBeUI7QUFDekIsTUFBTUMsVUFBVWYsNENBQU1BLENBQUNlLE9BQU8sSUFBSWpCLHFEQUFjLENBQUMsV0FBV0c7QUFFNUQsaUVBQWVjLE9BQU9BLEVBQUM7QUFFdkI7Ozs7Q0FJQyxHQUNNLE1BQU1FLGtCQUFrQixDQUFDQztJQUM5QixNQUFNQyxTQUFTLENBQUM7SUFFaEIsSUFBSSxDQUFDRCxLQUFLUixPQUFPLElBQUlRLEtBQUtSLE9BQU8sQ0FBQ0UsSUFBSSxPQUFPLElBQUk7UUFDL0NPLE9BQU9ULE9BQU8sR0FBRztJQUNuQixPQUFPLElBQUlRLEtBQUtSLE9BQU8sQ0FBQ1UsTUFBTSxHQUFHLE1BQU07UUFDckNELE9BQU9ULE9BQU8sR0FBRztJQUNuQjtJQUVBLElBQUksQ0FBQ1EsS0FBS0csUUFBUSxFQUFFO1FBQ2xCRixPQUFPRSxRQUFRLEdBQUc7SUFDcEI7SUFFQSxJQUFJLENBQUNILEtBQUtJLE1BQU0sRUFBRTtRQUNoQkgsT0FBT0csTUFBTSxHQUFHO0lBQ2xCO0lBRUEsT0FBTztRQUNMQyxTQUFTQyxPQUFPQyxJQUFJLENBQUNOLFFBQVFDLE1BQU0sS0FBSztRQUN4Q0Q7SUFDRjtBQUNGLEVBQUU7QUFFRjs7OztDQUlDLEdBQ00sTUFBTU8sa0JBQWtCLENBQUNDO0lBQzlCLE9BQU87UUFDTCxHQUFHQSxPQUFPO0lBRVo7QUFDRixFQUFFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGJhdWRpXFxPbmVEcml2ZVxcRGVza3RvcFxcUHJvbXB0UHJvXFxQcm9tcHRQcm9cXG1vZGVsc1xcY29tbWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbW1lbnQgZGF0YSBtb2RlbCBhbmQgdmFsaWRhdGlvbiBmdW5jdGlvbnNcbiAqL1xuXG4vKipcbiAqIENvbW1lbnQgbW9kZWwgc2NoZW1hXG4gKiBAdHlwZWRlZiB7T2JqZWN0fSBDb21tZW50TW9kZWxcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpZCAtIFVuaXF1ZSBpZGVudGlmaWVyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gcHJvbXB0SWQgLSBJRCBvZiB0aGUgcHJvbXB0IHRoZSBjb21tZW50IGlzIG9uXG4gKiBAcHJvcGVydHkge3N0cmluZ30gdXNlcklkIC0gSUQgb2YgdGhlIGNvbW1lbnQgY3JlYXRvclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGNvbnRlbnQgLSBDb21tZW50IHRleHQgY29udGVudFxuICogQHByb3BlcnR5IHtzdHJpbmd9IGNyZWF0ZWRCeSAtIE5hbWUgb2YgdGhlIHVzZXIgd2hvIGNyZWF0ZWQgdGhlIGNvbW1lbnRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBjcmVhdGVkQXQgLSBDcmVhdGlvbiB0aW1lc3RhbXBcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB1cGRhdGVkQXQgLSBMYXN0IHVwZGF0ZSB0aW1lc3RhbXBcbiAqL1xuXG4vKipcbiAqIENvbW1lbnQgbW9kZWwgZGVmaW5pdGlvblxuICovXG5pbXBvcnQgbW9uZ29vc2UsIHsgU2NoZW1hLCBtb2RlbHMgfSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IENvbW1lbnRTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICBwcm9tcHQ6IHsgLy8gUmVuYW1lZCBmcm9tIHByb21wdElkIGZvciBjbGFyaXR5IGFuZCBzdGFuZGFyZCByZWYgbmFtaW5nXG4gICAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiAnUHJvbXB0JywgLy8gUmVmZXJlbmNlIHRoZSBQcm9tcHQgbW9kZWxcbiAgICAgICAgcmVxdWlyZWQ6IFt0cnVlLCAnUHJvbXB0IHJlZmVyZW5jZSBpcyByZXF1aXJlZC4nXSxcbiAgICAgICAgaW5kZXg6IHRydWUgLy8gSW5kZXggZm9yIGVmZmljaWVudCBxdWVyeWluZyBvZiBjb21tZW50cyBieSBwcm9tcHRcbiAgICB9LFxuICAgIGF1dGhvcjogeyAvLyBSZW5hbWVkIGZyb20gdXNlcklkL2NyZWF0b3JcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdVc2VyJywgLy8gUmVmZXJlbmNlIHRoZSBVc2VyIG1vZGVsXG4gICAgICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ0F1dGhvciByZWZlcmVuY2UgaXMgcmVxdWlyZWQuJ11cbiAgICB9LFxuICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogW3RydWUsICdDb21tZW50IGNvbnRlbnQgY2Fubm90IGJlIGVtcHR5LiddLFxuICAgICAgICB0cmltOiB0cnVlLFxuICAgICAgICBtYXhsZW5ndGg6IFsxMDAwLCAnQ29tbWVudCBjYW5ub3QgZXhjZWVkIDEwMDAgY2hhcmFjdGVycy4nXVxuICAgIH1cbiAgICAvLyBBZGQgZmllbGRzIGZvciByZXBsaWVzL3RocmVhZGluZyBsYXRlciBpZiBuZWVkZWRcbiAgICAvLyBwYXJlbnRDb21tZW50OiB7IHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCwgcmVmOiAnQ29tbWVudCcgfSxcbiAgICAvLyByZXBsaWVzOiBbeyB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ0NvbW1lbnQnIH1dXG59LCB7XG4gICAgdGltZXN0YW1wczogdHJ1ZSAvLyBBdXRvbWF0aWNhbGx5IGFkZCBjcmVhdGVkQXQgYW5kIHVwZGF0ZWRBdFxufSk7XG5cbi8vIC0tLSBNb2RlbCBDcmVhdGlvbiAtLS1cbmNvbnN0IENvbW1lbnQgPSBtb2RlbHMuQ29tbWVudCB8fCBtb25nb29zZS5tb2RlbCgnQ29tbWVudCcsIENvbW1lbnRTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBDb21tZW50O1xuXG4vKipcbiAqIFZhbGlkYXRlIGNvbW1lbnQgZGF0YVxuICogQHBhcmFtIHtPYmplY3R9IGRhdGEgLSBDb21tZW50IGRhdGEgdG8gdmFsaWRhdGVcbiAqIEByZXR1cm5zIHtPYmplY3R9IFZhbGlkYXRpb24gcmVzdWx0IHdpdGggZXJyb3JzIGlmIGFueVxuICovXG5leHBvcnQgY29uc3QgdmFsaWRhdGVDb21tZW50ID0gKGRhdGEpID0+IHtcbiAgY29uc3QgZXJyb3JzID0ge307XG5cbiAgaWYgKCFkYXRhLmNvbnRlbnQgfHwgZGF0YS5jb250ZW50LnRyaW0oKSA9PT0gJycpIHtcbiAgICBlcnJvcnMuY29udGVudCA9ICdDb21tZW50IGNvbnRlbnQgaXMgcmVxdWlyZWQnO1xuICB9IGVsc2UgaWYgKGRhdGEuY29udGVudC5sZW5ndGggPiAxMDAwKSB7XG4gICAgZXJyb3JzLmNvbnRlbnQgPSAnQ29tbWVudCBtdXN0IGJlIGxlc3MgdGhhbiAxMDAwIGNoYXJhY3RlcnMnO1xuICB9XG5cbiAgaWYgKCFkYXRhLnByb21wdElkKSB7XG4gICAgZXJyb3JzLnByb21wdElkID0gJ1Byb21wdCBJRCBpcyByZXF1aXJlZCc7XG4gIH1cblxuICBpZiAoIWRhdGEudXNlcklkKSB7XG4gICAgZXJyb3JzLnVzZXJJZCA9ICdVc2VyIElEIGlzIHJlcXVpcmVkJztcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaXNWYWxpZDogT2JqZWN0LmtleXMoZXJyb3JzKS5sZW5ndGggPT09IDAsXG4gICAgZXJyb3JzLFxuICB9O1xufTtcblxuLyoqXG4gKiBTYW5pdGl6ZSBjb21tZW50IGRhdGEgZm9yIHNhZmUgZGlzcGxheVxuICogQHBhcmFtIHtPYmplY3R9IGNvbW1lbnQgLSBDb21tZW50IGRhdGEgdG8gc2FuaXRpemVcbiAqIEByZXR1cm5zIHtPYmplY3R9IFNhbml0aXplZCBjb21tZW50IGRhdGFcbiAqL1xuZXhwb3J0IGNvbnN0IHNhbml0aXplQ29tbWVudCA9IChjb21tZW50KSA9PiB7XG4gIHJldHVybiB7XG4gICAgLi4uY29tbWVudCxcbiAgICAvLyBSZW1vdmUgYW55IHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiBpZiBuZWVkZWRcbiAgfTtcbn07Il0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiU2NoZW1hIiwibW9kZWxzIiwiQ29tbWVudFNjaGVtYSIsInByb21wdCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicmVxdWlyZWQiLCJpbmRleCIsImF1dGhvciIsImNvbnRlbnQiLCJTdHJpbmciLCJ0cmltIiwibWF4bGVuZ3RoIiwidGltZXN0YW1wcyIsIkNvbW1lbnQiLCJtb2RlbCIsInZhbGlkYXRlQ29tbWVudCIsImRhdGEiLCJlcnJvcnMiLCJsZW5ndGgiLCJwcm9tcHRJZCIsInVzZXJJZCIsImlzVmFsaWQiLCJPYmplY3QiLCJrZXlzIiwic2FuaXRpemVDb21tZW50IiwiY29tbWVudCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./models/comment.js\n");

/***/ }),

/***/ "(api-node)/./models/prompt.js":
/*!**************************!*\
  !*** ./models/prompt.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SUPPORTED_AI_PLATFORMS: () => (/* binding */ SUPPORTED_AI_PLATFORMS),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   validatePrompt: () => (/* binding */ validatePrompt)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n// Prompt model structure\n// Define supported AI platforms\nconst SUPPORTED_AI_PLATFORMS = [\n    'ChatGPT',\n    'Claude',\n    'Gemini',\n    'MidJourney',\n    'DALL-E',\n    'Other' // Allow a generic 'Other' category\n];\nconst RatingSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    user: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    value: {\n        type: Number,\n        required: true,\n        min: 1,\n        max: 5\n    }\n}, {\n    _id: false\n}); // Don't create separate _id for subdocuments\nconst PromptSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    title: {\n        type: String,\n        required: [\n            true,\n            'Title is required.'\n        ],\n        trim: true,\n        minlength: [\n            3,\n            'Title must be at least 3 characters.'\n        ],\n        maxlength: [\n            150,\n            'Title cannot exceed 150 characters.'\n        ] // Increased length slightly\n    },\n    text: {\n        type: String,\n        required: [\n            true,\n            'Prompt text is required.'\n        ],\n        trim: true,\n        minlength: [\n            10,\n            'Prompt text must be at least 10 characters.'\n        ]\n    },\n    description: {\n        type: String,\n        trim: true,\n        maxlength: [\n            500,\n            'Description cannot exceed 500 characters.'\n        ]\n    },\n    creator: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        required: [\n            true,\n            'Creator is required.'\n        ]\n    },\n    tags: [\n        {\n            type: String,\n            trim: true,\n            lowercase: true,\n            validate: [\n                arrayLimit,\n                '{PATH} exceeds the limit of 10 tags'\n            ]\n        }\n    ],\n    platformCompatibility: [\n        {\n            type: String,\n            enum: SUPPORTED_AI_PLATFORMS // Validate against the list\n        }\n    ],\n    // Basic performance tracking fields\n    usageCount: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    ratings: [\n        RatingSchema\n    ],\n    successCount: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    failureCount: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    visibility: {\n        type: String,\n        enum: [\n            'private',\n            'team',\n            'public'\n        ],\n        default: 'private',\n        required: true,\n        index: true\n    },\n    teamId: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'Team',\n        index: true,\n        sparse: true\n    },\n    isEffective: {\n        type: Boolean,\n        default: null,\n        index: true\n    },\n    variables: {\n        type: [\n            String\n        ],\n        default: []\n    },\n    version: {\n        type: Number,\n        default: 1\n    }\n}, {\n    timestamps: true // Automatically add createdAt and updatedAt\n});\n// --- Indexing --- \n// Index fields that are often queried/sorted\nPromptSchema.index({\n    creator: 1,\n    createdAt: -1\n});\nPromptSchema.index({\n    tags: 1\n});\nPromptSchema.index({\n    title: 'text',\n    description: 'text'\n}); // For text search later\nPromptSchema.index({\n    teamId: 1\n}); // Add index for teamId\nPromptSchema.index({\n    title: 'text',\n    text: 'text',\n    description: 'text',\n    tags: 'text'\n});\n// --- Virtuals (Example: Average Rating - Calculation might be complex/deferred) ---\n/*\nPromptSchema.virtual('averageRating').get(function() {\n    if (this.ratings && this.ratings.length > 0) {\n        const sum = this.ratings.reduce((acc, rating) => acc + rating.value, 0);\n        return sum / this.ratings.length;\n    }\n    return 0;\n});\n\nPromptSchema.virtual('successRate').get(function() {\n    const totalFeedback = this.successCount + this.failureCount;\n    if (totalFeedback === 0) {\n        return null; // Or 0, depending on desired representation\n    }\n    return (this.successCount / totalFeedback) * 100;\n});\n\n// Ensure virtuals are included when converting to JSON/Object\nPromptSchema.set('toJSON', { virtuals: true });\nPromptSchema.set('toObject', { virtuals: true });\n*/ // --- Model Creation ---\nconst Prompt = mongoose__WEBPACK_IMPORTED_MODULE_0__.models.Prompt || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('Prompt', PromptSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Prompt);\n// --- Validation Function ---\nfunction validatePrompt(data) {\n    const errors = {};\n    let isValid = true;\n    // Check for required fields\n    if (!data.title || typeof data.title !== 'string' || data.title.trim().length === 0) {\n        errors.title = 'Title is required.';\n        isValid = false;\n    }\n    // Check the actual schema field 'text'\n    if (!data.text || typeof data.text !== 'string' || data.text.trim().length === 0) {\n        errors.text = 'Prompt text is required.'; // Changed key to 'text'\n        isValid = false;\n    }\n    // Potential future checks: length constraints, tag formats, etc.\n    // Note: Mongoose schema validation will handle more detailed checks later.\n    return {\n        isValid,\n        errors\n    };\n}\n// Helper function for array limit validation\nfunction arrayLimit(val) {\n    return val.length <= 10;\n}\n// Ensure teamId is present if visibility is 'team'\nPromptSchema.path('teamId').validate(function(value) {\n    return this.visibility !== 'team' || value != null;\n}, 'Team ID is required when visibility is set to team.'); // Pre-save hook to increment version (Example - adjust if needed)\n // PromptSchema.pre('save', function(next) {\n //     if (!this.isNew && this.isModified()) {\n //         this.version += 1;\n //     }\n //     next();\n // });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./models/prompt.js\n");

/***/ }),

/***/ "(api-node)/./models/team.js":
/*!************************!*\
  !*** ./models/team.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Team data model and validation functions\n */ \n// Define default limits based on plan\nconst PLAN_LIMITS = {\n    Free: {\n        promptLimit: 50\n    },\n    Pro: {\n        promptLimit: 1000\n    }\n};\nconst MemberSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    user: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    role: {\n        type: String,\n        required: true,\n        enum: [\n            'owner',\n            'admin',\n            'member'\n        ],\n        default: 'member'\n    },\n    joinedAt: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    _id: false\n}); // No separate _id for members sub-document\nconst TeamSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    name: {\n        type: String,\n        required: [\n            true,\n            'Team name is required.'\n        ],\n        trim: true,\n        maxlength: [\n            100,\n            'Team name cannot exceed 100 characters.'\n        ]\n    },\n    description: {\n        type: String,\n        trim: true,\n        maxlength: [\n            500,\n            'Team description cannot exceed 500 characters.'\n        ]\n    },\n    creator: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        required: [\n            true,\n            'Team creator is required.'\n        ]\n    },\n    members: [\n        MemberSchema\n    ],\n    // --- Plan & Limits ---\n    plan: {\n        type: String,\n        enum: Object.keys(PLAN_LIMITS),\n        default: 'Free'\n    },\n    promptLimit: {\n        type: Number\n    },\n    // --- Stripe Integration Fields ---\n    stripeCustomerId: {\n        type: String,\n        index: true,\n        sparse: true // Allow null/undefined values in the index\n    },\n    stripeSubscriptionId: {\n        type: String,\n        index: true,\n        sparse: true\n    }\n}, {\n    timestamps: true // Automatically add createdAt and updatedAt\n});\n// --- Indexing ---\nTeamSchema.index({\n    name: 1\n});\n// Ensure efficient querying for members\nTeamSchema.index({\n    \"members.user\": 1\n});\nTeamSchema.index({\n    plan: 1\n}); // Index the plan field\n// --- Pre-save Hook ---\n// Automatically add the creator as the initial 'owner' member when a team is created\nTeamSchema.pre('save', function(next) {\n    // Set default members\n    if (this.isNew) {\n        if (!this.members) {\n            this.members = [];\n        }\n        const creatorExists = this.members.some((member)=>member.user.equals(this.creator));\n        if (!creatorExists) {\n            this.members.push({\n                user: this.creator,\n                role: 'owner'\n            });\n        }\n    }\n    // Set default promptLimit based on plan if not already set or if plan changes\n    if (this.isNew || this.isModified('plan')) {\n        const limits = PLAN_LIMITS[this.plan];\n        if (limits) {\n            this.promptLimit = limits.promptLimit;\n        }\n    }\n    next();\n});\n// --- Model Creation ---\n// Use 'Team' as the model name following Mongoose convention\nconst Team = mongoose__WEBPACK_IMPORTED_MODULE_0__.models.Team || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('Team', TeamSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Team); /**\n * Team member schema\n * @typedef {Object} TeamMember\n * @property {string} userId - User ID\n * @property {string} role - Member role (owner, admin, member)\n * @property {string} joinedAt - Timestamp when member joined\n */  // Removed helper functions (validateTeam, sanitizeTeam, getMemberRole, isTeamAdmin, isTeamMember)\n // These have been moved to lib/teamUtils.js to avoid including Mongoose model code in the client bundle.\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./models/team.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprompts%2F%5Bid%5D%2Fcomments&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cprompts%5C%5Bid%5D%5Ccomments.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprompts%2F%5Bid%5D%2Fcomments&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cprompts%5C%5Bid%5D%5Ccomments.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_prompts_id_comments_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\prompts\\[id]\\comments.js */ \"(api-node)/./pages/api/prompts/[id]/comments.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_prompts_id_comments_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_prompts_id_comments_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/prompts/[id]/comments\",\n        pathname: \"/api/prompts/[id]/comments\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_prompts_id_comments_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGcHJvbXB0cyUyRiU1QmlkJTVEJTJGY29tbWVudHMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q3Byb21wdHMlNUMlNUJpZCU1RCU1Q2NvbW1lbnRzLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQ3FFO0FBQ3JFO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw4REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsOERBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxccHJvbXB0c1xcXFxbaWRdXFxcXGNvbW1lbnRzLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wcm9tcHRzL1tpZF0vY29tbWVudHNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9wcm9tcHRzL1tpZF0vY29tbWVudHNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprompts%2F%5Bid%5D%2Fcomments&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cprompts%5C%5Bid%5D%5Ccomments.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/prompts/[id]/comments.js":
/*!********************************************!*\
  !*** ./pages/api/prompts/[id]/comments.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../lib/auth */ \"(api-node)/./lib/auth.js\");\n/* harmony import */ var _models_prompt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../models/prompt */ \"(api-node)/./models/prompt.js\");\n/* harmony import */ var _models_comment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../models/comment */ \"(api-node)/./models/comment.js\");\n/* harmony import */ var _models_team__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../models/team */ \"(api-node)/./models/team.js\");\n/* harmony import */ var _lib_mongoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../lib/mongoose */ \"(api-node)/./lib/mongoose.js\");\n\n\n\n\n\n/**\r\n * API handler for prompt comments\r\n * \r\n * GET: Get comments for a prompt\r\n * POST: Add a new comment to a prompt\r\n * PUT: Update a comment\r\n * DELETE: Delete a comment\r\n */ async function handler(req, res) {\n    const { method } = req;\n    const { id: promptId } = req.query; // Rename id to promptId\n    const sessionUserId = req.session?.sub; // Get user ID from session\n    if (!promptId) {\n        return res.status(400).json({\n            message: 'Prompt ID is required'\n        });\n    }\n    if (!sessionUserId) {\n        return res.status(401).json({\n            message: 'Authentication required'\n        });\n    }\n    try {\n        await (0,_lib_mongoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n        // --- Authorization Check: Can user view the parent prompt? ---\n        const prompt = await _models_prompt__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findById(promptId).select('visibility creator teamId').populate('teamId', 'members');\n        if (!prompt) {\n            return res.status(404).json({\n                message: 'Parent prompt not found'\n            });\n        }\n        let canViewPrompt = false;\n        if (prompt.visibility === 'public') {\n            canViewPrompt = true;\n        } else if (prompt.visibility === 'private' && prompt.creator.equals(sessionUserId)) {\n            canViewPrompt = true;\n        } else if (prompt.visibility === 'team' && prompt.teamId) {\n            const member = prompt.teamId.members.find((m)=>m.user.equals(sessionUserId));\n            if (member) {\n                canViewPrompt = true;\n            }\n        }\n        if (!canViewPrompt) {\n            return res.status(403).json({\n                message: 'Not authorized to view or comment on this prompt'\n            });\n        }\n        // --- End Authorization Check ---\n        switch(req.method){\n            case 'GET':\n                // User is authorized to view prompt, so they can view comments\n                return getCommentsHandler(req, res, promptId);\n            case 'POST':\n                // User is authorized to view prompt, so they can add comments\n                return addCommentHandler(req, res, promptId, sessionUserId);\n            default:\n                res.setHeader('Allow', [\n                    'GET',\n                    'POST'\n                ]);\n                return res.status(405).end(`Method ${req.method} Not Allowed`);\n        }\n    } catch (error) {\n        console.error(`Error in /api/prompts/[id]/comments for prompt ${promptId}:`, error);\n        if (error.name === 'CastError') {\n            return res.status(400).json({\n                message: 'Invalid Prompt ID format'\n            });\n        }\n        return res.status(500).json({\n            message: 'Internal server error'\n        });\n    }\n}\n/**\r\n * Get comments for a prompt\r\n */ async function getCommentsHandler(req, res, promptId) {\n    try {\n        // Find comments and populate author details\n        const comments = await _models_comment__WEBPACK_IMPORTED_MODULE_2__[\"default\"].find({\n            prompt: promptId\n        }).populate('author', 'name email image') // Select fields needed for display\n        .sort({\n            createdAt: -1\n        }); // Sort by newest first\n        return res.status(200).json(comments || []);\n    } catch (error) {\n        console.error('Error fetching comments:', error);\n        return res.status(500).json({\n            message: 'Failed to fetch comments'\n        });\n    }\n}\n/**\r\n * Add a new comment to a prompt\r\n */ async function addCommentHandler(req, res, promptId, authorId) {\n    const { content } = req.body;\n    if (!content || typeof content !== 'string' || content.trim().length === 0) {\n        return res.status(400).json({\n            message: 'Comment content cannot be empty.'\n        });\n    }\n    try {\n        const newComment = new _models_comment__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            prompt: promptId,\n            author: authorId,\n            content: content.trim()\n        });\n        await newComment.save(); // Triggers schema validation\n        // Populate the author details for the created comment before sending back\n        const populatedComment = await _models_comment__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findById(newComment._id).populate('author', 'name email image');\n        return res.status(201).json(populatedComment);\n    } catch (error) {\n        console.error('Error creating comment:', error);\n        if (error.name === 'ValidationError') {\n            const errors = Object.values(error.errors).map((el)=>el.message);\n            return res.status(400).json({\n                message: 'Validation failed',\n                errors\n            });\n        }\n        return res.status(500).json({\n            message: 'Failed to create comment'\n        });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_lib_auth__WEBPACK_IMPORTED_MODULE_0__.withAuth)(handler));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/prompts/[id]/comments.js\n");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next-auth/jwt":
/*!********************************!*\
  !*** external "next-auth/jwt" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("next-auth/jwt");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprompts%2F%5Bid%5D%2Fcomments&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cprompts%5C%5Bid%5D%5Ccomments.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();